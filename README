Modification of FILM3 algorithm to incorporate membrane potential
(c) Tim Nugent 2013

Paper
-----

For full details, see:

http://www.pnas.org/content/early/2012/05/21/1120036109
http://www.biomedcentral.com/1471-2105/14/276/

Compiling
---------

Tested under Ubuntu 13.04 and CentOS 5.4.

Requires Boost headers and libraries - specifically boost_thread and boost_system. On recent Debian/Ubuntu distributions, install these packages:

libboost-thread1.49-dev
libboost-thread1.49.0
libboost-system1.49-dev
libboost-system1.49.0

or just install them all:

libboost-all-dev

Then to compile, just run make.

Usage
-----

Refinement using contactrecomb:
-------------------------------

./contactrecomb input/2nq2A_ensemble.pdb input/2nq2A.con input/2nq2A.ess input/2nq2A.zcoord 1.6 500 8 output.pdb

This is the protocol that was used in the BMC Bioinformatics paper. The arguments are:

2nq2A_ensemble.pdb : ensemble of candidate structures, generated by superposing candidates on to the FILM3 recombined model
2nq2A.con          : contacts predicted by PSICOV
2nq2A.ess          : secondary structure
2nq2A.zcoord       : z-coordinates
1.6                : membrane potential energy weighting
500                : poolsize for genetic algorithm used to orientate target
8                  : threads to use for orientation
output.pdb         : output PDB file

Where you see a line like this:

Emin = 1187.153809

A lower energy structure has been found.


Folding using FILM3:
--------------------

./film3 input/1gzmA.nfpar test.pdb

Some new options have been added to the nfpar file:

# Use GA for orientation, otherwise direct search
ORIENTGA 1
# Weighting for membrane potential energy weighting
ENVWT 0.002
# Threads to use for orientation
THREADS	8
# Maximum GA calls for orientation
MAXGACALLS	10000
# GA poolsize for orientation
GAPOOLSIZE	500
# Skip the original FILM3 Z-coord minimum distance test 
SKIPZTEST 1
# Fold helix by helix
FOLDBYHELIX 1

The last option FOLDBYHELIX begins the simulation with just 2 TM helices, and adds helices sequentially throughout the simulation.

You can monitor the simulation using the monitor.py script:

pymol scripts/monitor.py

This will automatically reload the file test.pdb every few seconds.

Help
----

Please report bugs and suggestions to:

t.nugent@cs.ucl.ac.uk

